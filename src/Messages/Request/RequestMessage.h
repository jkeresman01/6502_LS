#pragma once

////////////////////////////////////////////////////////////
// Headers
////////////////////////////////////////////////////////////

#include <cstdint>
#include <nlohmann/json.hpp>

#include "../Message.h"

namespace ls6502
{

//////////////////////////////////////////////////////////////
///
/// @class RequestMessage
/// @brief A request message to describe a request between
///        the client (editor) and the server.
///
//////////////////////////////////////////////////////////////
class RequestMessage : public Message
{
public:
    //////////////////////////////////////////////////////////////
    ///
    /// @brief Constructs the RequestMessage from json RPC
    ///
    //////////////////////////////////////////////////////////////
    explicit RequestMessage(const nlohmann::json& jsonRPC);

    //////////////////////////////////////////////////////////////
    ///
    /// @brief Accessor method for getting the ID of request message
    ///
    //////////////////////////////////////////////////////////////
    int64_t getId() const
    {
        return m_id;
    };

private:
    //////////////////////////////////////////////////////////////
    ///
    /// @brief Mutator method for setting and validating request ID
    ///
    /// @param [in] jsonRPC
    ///
    //////////////////////////////////////////////////////////////
    void setId(const nlohmann::json& jsonRPC);

    //////////////////////////////////////////////////////////////
    ///
    /// @brief Mutator method for setting and validating request method
    ///
    /// @param [in] jsonRPC
    ///
    //////////////////////////////////////////////////////////////
    void setMethod(const nlohmann::json& jsonRPC);

protected:
    //////////////////////////////////////////////////////////////
    ///
    /// @brief The request ID
    ///
    //////////////////////////////////////////////////////////////
    int64_t m_id;

    //////////////////////////////////////////////////////////////
    ///
    /// @brief The method to be invoked
    ///
    //////////////////////////////////////////////////////////////
    std::string m_method;
};

} // namespace ls6502
