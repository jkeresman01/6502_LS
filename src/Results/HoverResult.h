#pragma once

#include <nlohmann/json.hpp>
#include <string>

namespace ls6502
{
//////////////////////////////////////////////////////////////
///
/// @class HoverResult
///
/// @brief Represents the result of a hover request in a
///        Ls6502 language server.
///
//////////////////////////////////////////////////////////////
class HoverResult
{
  public:
    //////////////////////////////////////////////////////////////
    ///
    /// @brief Constructs a HoverResult with the given value.
    ///
    /// @param [in] value The string value to be displayed in the hover result.
    ///
    //////////////////////////////////////////////////////////////
    explicit HoverResult(const std::string &value) : m_value(value), m_kind("markdown"){};

    //////////////////////////////////////////////////////////////
    ///
    /// @brief Accessor method for hover result value
    ///
    /// @return value Hover result value
    ///
    //////////////////////////////////////////////////////////////
    std::string getResult() const { return m_value; };

    //////////////////////////////////////////////////////////////
    ///
    /// @brief Serializes the HoverResult object into a JSON representation.
    ///
    /// @return A nlohmann::json object containing the hover result
    ///
    //////////////////////////////////////////////////////////////
    nlohmann::json toJson() const { return {{"contents", {{"kind", m_kind}, {"value", m_value}}}}; }

  private:
    //////////////////////////////////////////////////////////////
    ///
    /// @brief The string value that will be displayed in the hover result.
    ///
    //////////////////////////////////////////////////////////////
    std::string m_value;

    //////////////////////////////////////////////////////////////
    ///
    /// @brief The kind of the hover
    ///
    //////////////////////////////////////////////////////////////
    std::string m_kind;
};

} // namespace ls6502
