#pragma once

////////////////////////////////////////////////////////////
// Headers
////////////////////////////////////////////////////////////

#include <sstream>
#include <string>

namespace ls6502
{
//////////////////////////////////////////////////////////////
///
/// @struct AddressingMode
///
/// @brief Represents an addressing mode in the 6502 instruction set.
///
//////////////////////////////////////////////////////////////
struct AddressingMode
{
public:
    //////////////////////////////////////////////////////////////
    ///
    /// @brief The name of the addressing mode.
    ///
    //////////////////////////////////////////////////////////////
    std::string mode;

    //////////////////////////////////////////////////////////////
    ///
    /// @brief The assembler representation of the addressing mode.
    ///
    //////////////////////////////////////////////////////////////
    std::string assembler;

    //////////////////////////////////////////////////////////////
    ///
    /// @brief The opcode associated with this addressing mode.
    ///
    //////////////////////////////////////////////////////////////
    std::string opcode;

    //////////////////////////////////////////////////////////////
    ///
    /// @brief The number of bytes used by this addressing mode.
    ///
    //////////////////////////////////////////////////////////////
    uint32_t bytes;

    //////////////////////////////////////////////////////////////
    ///
    /// @brief The number of CPU cycles required for execution.
    ///
    //////////////////////////////////////////////////////////////
    uint32_t cycles;

    //////////////////////////////////////////////////////////////
    ///
    /// @brief Indicates whether this mode incurs an extra cycle.
    ///
    //////////////////////////////////////////////////////////////
    bool hasExtraCycle;

    //////////////////////////////////////////////////////////////
    ///
    /// @brief Retrieves details about the addressing mode as a formatted string.
    ///
    /// @return A string describing the opcode, bytes, and cycles.
    ///
    //////////////////////////////////////////////////////////////
    std::string getDetails() const
    {
        std::stringstream ss;
        ss << "Opcode: " << opcode << ", bytes: " << bytes << ", cycles: " << cycles << "\r\n";
        return ss.str();
    }

    //////////////////////////////////////////////////////////////
    ///
    /// @brief Converts the addressing mode information to a formatted string.
    ///
    /// @return A string representation of the addressing mode details.
    ///
    //////////////////////////////////////////////////////////////
    std::string toString() const
    {
        std::stringstream ss;

        ss << mode << "\t";
        ss << assembler << "\t";
        ss << opcode << "\t";
        ss << bytes << "\t";
        ss << cycles << "\t";
        ss << "Extra cycle: " << (hasExtraCycle ? "YES" : "NO") << "\n";

        return ss.str();
    }
};

} // namespace ls6502
